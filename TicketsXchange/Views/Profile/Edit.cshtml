@model TicketsXchange.Models.Profile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div class="container">

        <br />
        <h2 class="text-center">My Profile</h2>

        @using (@Html.BeginForm("Edit", "Profile", FormMethod.Post, new { enctype = "Multipart/form-data",  data_toggle = "validator", role="form"}))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId, new { @class = "user-id" })

                <div class="form-group">
                    <div class="profile-user-avatar">
                        <div>
                            @if (String.IsNullOrEmpty(Model.Photo))
                            {
                                <img src="~/Content/images/user-avatar.png" id="photo_img" />
                            }
                            else
                            {
                                <img src="@Url.Content(Model.Photo)" id="photo_img" />
                            }
                        </div>
                        <div style="display: flex;">
                            <div class="upload-btn-wrapper">
                                <button class="upload-btn">Upload your photo</button>
                                <input type="file" name="Photo" id="photo" onchange="readURL(this);"/>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = ""} })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        <div class="help-block with-errors"></div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        <div class="help-block with-errors"></div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        <div class="profile-gender-div">
                            @if (Model.Gender == 1)
                            {
                                <input type="radio" class="option-input radio" name="Gender" value="1" checked />
                                <div class="profile-gender-label">
                                    Male
                                </div>
                                <input type="radio" class="option-input radio" name="Gender" value="0" />
                                <div class="profile-gender-label">
                                    Female
                                </div>
                            }
                            else
                            {
                                <input type="radio" class="option-input radio" name="Gender" value="1" />
                                <div class="profile-gender-label">
                                    Male
                                </div>
                                <input type="radio" class="option-input radio" name="Gender" value="0" checked />
                                <div class="profile-gender-label">
                                    Female
                                </div>
                            }

                        </div>
                        @Html.HiddenFor(model => model.Gender, new { @class = "gender" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "datepicker-here form-control", @id="dob_picker", data_language="en", data_date_format="yyyy-mm-dd" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AddressLine3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine3, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-8">
                        <input type="submit" value="Save" class=" form-control profile-save" />
                    </div>
                </div>
            </div>
        }

    </div>


    @section scripts {

        <script type="text/javascript">

            $(document).ready(function () {

                localStorage.setItem("UserID", $(".user-id").val())
 
                $('#dob_picker').data('datepicker')
                $("#user_avatar_img").attr('src', $("#photo_img").attr('src'))
                localStorage.setItem("user_avatar", $("#photo_img").attr('src'));

            });

           function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#photo_img')
                            .attr('src', e.target.result);
                            
                    };

                    reader.readAsDataURL(input.files[0]);
                }
            }
        </script>

    }